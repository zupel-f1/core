"""initial

Revision ID: 8793582ec3e1
Revises: 
Create Date: 2025-08-20 14:26:22.929416

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8793582ec3e1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('circuits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('circuit_name', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('constructors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('nationality', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('given_name', sa.String(length=255), nullable=False),
    sa.Column('family_name', sa.String(length=255), nullable=False),
    sa.Column('nationality', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('permanent_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('race_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year', 'round_number', name='idx_rounds_on_year_and_round_number')
    )
    op.create_table('constructor_standings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('constructor_id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['constructor_id'], ['constructors.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('constructor_id', 'round_id', name='idx_constructor_standings_on_constructor_id_and_round_id')
    )
    op.create_table('driver_standings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('driver_id', 'round_id', name='idx_driver_standings_on_driver_id_and_round_id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('circuit_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['circuit_id'], ['circuits.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('round_id', 'event_type', name='idx_events_on_round_id_and_event_type')
    )
    op.create_table('event_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('constructor_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('laps', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('start_position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['constructor_id'], ['constructors.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'driver_id', name='idx_event_results_on_event_id_and_driver_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_results')
    op.drop_table('events')
    op.drop_table('driver_standings')
    op.drop_table('constructor_standings')
    op.drop_table('rounds')
    op.drop_table('drivers')
    op.drop_table('constructors')
    op.drop_table('circuits')
    # ### end Alembic commands ###
